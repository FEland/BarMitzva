{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/ALL DESK/trope/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\nimport useAudioPlayer from './useAudioPlayer';\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(0, items.length)]);\n  }\n\n  return songList;\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nexport default function Quiz({\n  flashcards\n}) {\n  var audio = new Audio(); // const { curTime, duration, playing, setPlaying, setClickedTime } = useAudioPlayer(audio);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        playing = _useState2[0],\n        setPlaying = _useState2[1];\n\n  function makeSongList(audio, songList) {\n    audio.preload = \"auto\";\n    audio.controls = true;\n    var i = 0; // playing ? console.log('1play') : console.log('1paue');\n\n    audio.addEventListener('ended', function () {\n      i++;\n      console.log(\"hit end of audio \", i - 1);\n      playing ? console.log('end - play TRUE') : console.log('end - play FALSE');\n      setTrope(i); // playing ? console.log('1play') : console.log('1paue');\n\n      if (i < songList.length && !playing) {\n        console.log(\"still adding next\" + i);\n        audio.src = songList[i].sound;\n        audio.playbackRate = 2; // playing ? audio.play() : audio.pause();\n        // playing ? console.log('plaaaaay') : console.log('pauaaaase');\n\n        if (playing === true) {\n          console.log(\"Yes I'm playing! adding next\");\n          audio.play();\n        } else {\n          console.log(\"Yes I'm paused not adding next\");\n          audio.pause();\n        }\n      }\n    }, true);\n    audio.volume = 0.3; // audio.loop = false;\n\n    setTrope(0);\n    audio.src = songList[0].sound;\n    audio.playbackRate = 2; // playing ? audio.play() : audio.pause();\n    // playing ? console.log('plaay') : console.log('pauase');\n\n    audio.play();\n  } // const [filter, filtered] = setState(event.target.value)\n\n\n  let items = flashcards;\n\n  const _useState3 = useState(createQuiz(items, getRandomInt(2, 10))),\n        _useState4 = _slicedToArray(_useState3, 2),\n        quiz = _useState4[0],\n        reloadQuiz = _useState4[1];\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        trope = _React$useState2[0],\n        setTrope = _React$useState2[1]; //pick a song\n  // const handleSong = (event, newTrope) => {\n  //     setTrope(newTrope);\n  // };\n\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  };\n\n  useEffect(() => {\n    // const audio = document.getElementById(\"audio\");\n    playing ? audio.play() : audio.pause();\n    playing ? console.log(\"effect hi\") : console.log(\"effect bye\");\n  }); // var quiz = createQuiz(items, 4);\n  // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \" Practice\", /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: 4 // position=\"static\"\n    ,\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 8,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: () => {\n        reloadQuiz(createQuiz(items, value));\n        setPlaying(true);\n        console.log(\"hit play\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), playing ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: () => {\n        setPlaying(false);\n        console.log(\"hit pause\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, playing ? 'play' : 'pause') : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: () => {\n        makeSongList(audio, quiz);\n        setPlaying(true);\n        console.log(\"hit play\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, playing ? 'play' : 'pause'))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, quiz.map((songName, index) => {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      style: trope === index ? {\n        color: 'black'\n      } : {\n        color: 'yellow'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 12\n      }\n    }, songName.heb);\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js"],"names":["React","useState","useEffect","Button","PauseCircleFilled","PlayCircleFilled","CachedIcon","Slider","useAudioPlayer","getRandomInt","min","max","Math","ceil","floor","random","createQuiz","items","num","i","songList","length","push","Quiz","flashcards","audio","Audio","playing","setPlaying","makeSongList","preload","controls","addEventListener","console","log","setTrope","src","sound","playbackRate","play","pause","volume","quiz","reloadQuiz","trope","value","setValue","handleChange","event","newValue","map","songName","index","color","heb"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState, useEffect } from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\nimport useAudioPlayer from './useAudioPlayer';\n\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(0, items.length)]);\n    }\n    return songList;\n  }\n\n  \n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\n\n  \nexport default function Quiz( { flashcards } ) {\n\n    var audio = new Audio();\n    // const { curTime, duration, playing, setPlaying, setClickedTime } = useAudioPlayer(audio);\n    const [playing, setPlaying] = useState(true);\n\n    function makeSongList(audio, songList) {\n\n        audio.preload = \"auto\";\n        audio.controls = true;\n        var i = 0;\n        // playing ? console.log('1play') : console.log('1paue');\n\n        audio.addEventListener('ended', function () {\n    \n            i++;\n            console.log(\"hit end of audio \", i-1);\n            playing ? console.log('end - play TRUE') : console.log('end - play FALSE');\n\n            setTrope(i);\n            // playing ? console.log('1play') : console.log('1paue');\n            if ((i < songList.length) && (!playing)){\n                console.log(\"still adding next\" + i);\n                audio.src = songList[i].sound;\n                audio.playbackRate = 2;\n                // playing ? audio.play() : audio.pause();\n                // playing ? console.log('plaaaaay') : console.log('pauaaaase');\n                if (playing === true) {\n                    console.log(\"Yes I'm playing! adding next\");\n                    audio.play();}\n                else {\n                    console.log(\"Yes I'm paused not adding next\");\n                    audio.pause();\n                }\n            }\n\n          }, true);\n    \n            audio.volume = 0.3;\n            // audio.loop = false;\n            setTrope(0);\n            audio.src = songList[0].sound;\n            audio.playbackRate = 2;\n\n            // playing ? audio.play() : audio.pause();\n            // playing ? console.log('plaay') : console.log('pauase');\n\n\n            audio.play();\n    }\n    // const [filter, filtered] = setState(event.target.value)\n    let items = flashcards;\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n    const [trope, setTrope] = React.useState(0);\n\n    //pick a song\n    // const handleSong = (event, newTrope) => {\n    //     setTrope(newTrope);\n    // };\n\n    const [value, setValue] = React.useState(10);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    useEffect(() => {\n        // const audio = document.getElementById(\"audio\");\n        playing ? audio.play() : audio.pause();\n        playing ? console.log(\"effect hi\") : console.log(\"effect bye\");\n\n    })\n\n\n\n  \n\n    // var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n         <quiz>\n            <h5> Practice\n           {/* {pause === true ? 'paused' : 'playing'} */}\n\n           <Button size=\"small\" variant=\"contained\"> \n           <Slider value={value} onChange={handleChange} defaultValue={4}\n                // position=\"static\"\n                step={1} marks min={1} max={8} valueLabelDisplay=\"auto\" />\n           \n            </Button>\n        \n\n            <div className=\"controls\">\n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value)); setPlaying(true); console.log(\"hit play\");}}/>}>\n                </Button> \n                \n                {playing ?  \n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => { setPlaying(false); console.log(\"hit pause\");}}/>}>\n                        {playing ? 'play' : 'pause'}\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PlayCircleFilled onClick={() => {makeSongList(audio, quiz); setPlaying(true); console.log(\"hit play\");}}/>}>\n                        {playing ? 'play' : 'pause'}\n                    </Button>\n                }\n\n                {/* <Bar curTime={curTime} duration={duration} onTimeUpdate={(time) => setClickedTime(time)}/> */}\n            </div>\n           {/* <Button variant=\"contained\" color=\"primary\"\n                endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value)); setPlaying(true);}}/>}>\n            </Button> */}\n\n\n            {/* <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PlayCircleFilled onClick={() => {makeSongList(audio, quiz);  setPlaying(false);}}/>}>\n            </Button> */}\n{/*             \n            <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PauseCircleFilled onClick={() => { setPlaying(true);}}/>}>\n            </Button> */}\n\n            </h5>\n\n\n        <p>\n        {quiz.map((songName, index)=> {return ( \n           <i style={(trope === index) ? {color: 'black'} : {color: 'yellow'}}>{songName.heb}</i>)})}\n        </p>\n\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}