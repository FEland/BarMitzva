{"ast":null,"code":"var _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState } from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Quiz from \"./Quiz\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  grid: {\n    width: 500,\n    height: 450,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }\n})); // function getRandomInt(min, max) {\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min)) + min; \n// }\n// function createQuiz(items, num) {\n//   var i; var songList = [];\n//   if (num > items.length) {\n//     return;\n//   }\n//   for (i = 0; i < num; i++){\n//     songList.push(items[getRandomInt(0, items.length)]);\n//   }\n//   return songList;\n// }\n// function makeSongList(songList) {\n//   var audio = new Audio();\n//   audio.preload = \"auto\";\n//   audio.controls = true;\n//   var i = 0;\n//   audio.addEventListener('ended', function () {\n//     // i = ++i < songList.length ? i : 0;\n//     i++;\n//     if (i < songList.length){\n//       audio.src = songList[i].sound;\n//       console.log(audio.duration)\n//       audio.playbackRate = 2;\n//       audio.play();}\n//     }, true);\n//   audio.volume = 0.3;\n//   // audio.loop = false;\n//   audio.src = songList[0].sound;\n//   audio.playbackRate = 2;\n//   audio.play();\n// }\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\nexport default function FlashcardList({\n  flashcards\n}) {\n  // const [filter, filtered] = setState(event.target.value)\n  let items = flashcards; // const [val, setNumQuizItems] = useState(3);\n  // const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n  // const [activeStep, setActiveStep] = React.useState(0);\n  // const handleNext = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  // };\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n\n  const classes = useStyles(); // var x;\n  // var quiz = createQuiz(items, 4);\n  // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Quiz, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, items.map(flashcard => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flashcard, {\n      flashcard: flashcard,\n      key: flashcard.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \" \"));\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js"],"names":["React","useState","Flashcard","makeStyles","Grid","PlayArrowIcon","Button","PlayCircleOutlineIcon","CachedIcon","MobileStepper","KeyboardArrowLeft","KeyboardArrowRight","Quiz","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","FlashcardList","flashcards","items","classes","map","flashcard","id"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAD+B;AAOrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,SAAS,EAAE,KAHP;AAIJC,IAAAA,OAAO,EAAE,QAJL;AAKJC,IAAAA,UAAU,EAAE;AALR;AAP+B,CAAZ,CAAD,CAA5B,C,CAgBE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;;AAIA,eAAe,SAASC,aAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAyC;AAEpD;AACA,MAAIC,KAAK,GAAGD,UAAZ,CAHoD,CAKpD;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAME,OAAO,GAAGhB,SAAS,EAAzB,CAnBoD,CAoBpD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEE;AACA;AACA;AACF;AACA;AACA;;AAGA,sBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,SAAS,EAAEgB,OAAO,CAACd,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgDH,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCa,KAAK,CAACE,GAAN,CAAUC,SAAS,IAAI;AACZ,wBACA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAIA,SAAxB;AAAmC,MAAA,GAAG,EAAIA,SAAS,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADA;AAKT,GANF,CADD,CAhDG,CADL,CAHA;AAoEH","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState} from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Quiz from \"./Quiz\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n    },\n  }));\n\n  // function getRandomInt(min, max) {\n  //   min = Math.ceil(min);\n  //   max = Math.floor(max);\n  //   return Math.floor(Math.random() * (max - min)) + min; \n  // }\n\n  // function createQuiz(items, num) {\n  //   var i; var songList = [];\n  //   if (num > items.length) {\n  //     return;\n  //   }\n  //   for (i = 0; i < num; i++){\n  //     songList.push(items[getRandomInt(0, items.length)]);\n  //   }\n  //   return songList;\n  // }\n\n  // function makeSongList(songList) {\n\n  //   var audio = new Audio();\n  //   audio.preload = \"auto\";\n  //   audio.controls = true;\n  //   var i = 0;\n\n  //   audio.addEventListener('ended', function () {\n\n  //     // i = ++i < songList.length ? i : 0;\n  //     i++;\n  //     if (i < songList.length){\n  //       audio.src = songList[i].sound;\n  //       console.log(audio.duration)\n  \n        \n  //       audio.playbackRate = 2;\n  //       audio.play();}\n  //     }, true);\n\n  //   audio.volume = 0.3;\n  //   // audio.loop = false;\n  //   audio.src = songList[0].sound;\n  //   audio.playbackRate = 2;\n  //   audio.play();\n  // }\n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \n\n  \nexport default function FlashcardList( { flashcards } ) {\n\n    // const [filter, filtered] = setState(event.target.value)\n    let items = flashcards;\n\n    // const [val, setNumQuizItems] = useState(3);\n\n    // const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n\n    // const [activeStep, setActiveStep] = React.useState(0);\n\n    // const handleNext = () => {\n    //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    // };\n  \n    // const handleBack = () => {\n    //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    // };\n\n    const classes = useStyles();\n    // var x;\n\n    // var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n\n        \n    <div>\n         <div className={classes.root}>\n           <Quiz/>\n         {/* <quiz>\n           <p>\n\n           <MobileStepper\n            // variant=\"\"\n            steps={6}\n            position=\"static\"\n            activeStep={activeStep}\n            // className={classes.root}\n            nextButton={\n              <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>  \n                Next <KeyboardArrowRight />\n              </Button>\n            }\n            backButton={\n              <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}> <KeyboardArrowLeft />\n                Back\n              </Button>\n            }/>\n\n          \n           <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={\n                    <CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, getRandomInt(2, 10)))}}>\n                    </CachedIcon>\n                }>\n                \n            </Button>\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={\n                    <PlayCircleOutlineIcon onClick={() => {makeSongList(quiz)}}>\n                    </PlayCircleOutlineIcon>\n                }>\n            </Button>\n\n           {quiz.map( songName => {return (<> {songName.heb} </>)})}\n            {/* {makeSongList(quiz)} */}\n           {/* </p>\n           </quiz>\n        <input type=\"text\" onChange={this.filtered.bind(this)}/> */}\n\n      <Grid container spacing={3}> \n      {items.map(flashcard => {\n                  return (\n                  <Grid item xs={3} >\n                    <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard>\n                  </Grid>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}