{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/ALL DESK/trope/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(0, items.length)]);\n  }\n\n  return songList;\n}\n\nexport default function Quiz({\n  flashcards\n}) {\n  var audio = new Audio();\n  const jo = 0;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        flag = _useState2[0],\n        setFlag = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        trope = _useState4[0],\n        setTrope = _useState4[1];\n\n  let i = -1;\n  let myflag = 0;\n\n  function playNext() {\n    // if (!myflag) printc(\"JACKSA\");\n    // var i = trope;\n    ++i;\n\n    if (i < quiz.length) {\n      audio.preload = \"auto\"; // audio.volume = 0.3;\n\n      audio.src = quiz[i].sound;\n      audio.playbackRate = 2;\n      audio.play();\n    } else {\n      setFlag(1);\n      i = -1;\n    }\n\n    setTrope(i);\n  }\n\n  audio.addEventListener('ended', function () {\n    if (!myflag) playNext();else {\n      audio.pause();\n    }\n  }, false);\n  let items = flashcards;\n\n  const _useState5 = useState(createQuiz(items, 4)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        quiz = _useState6[0],\n        reloadQuiz = _useState6[1];\n\n  const _React$useState = React.useState(10),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  };\n\n  function printc(calledBy) {\n    console.log(calledBy, \"i= \", i, \"myflag= \", myflag); // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n  }\n\n  function handlePlay() {\n    myflag = 0;\n    setTrope(0); // printc(\"handlePlay b4 PlayNext\");\n\n    playNext();\n    setFlag(0); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    myflag = 1;\n    audio.pause(); // printc(\"handlePause after setFlag\");\n\n    setFlag(1);\n    i = 0;\n    setTrope(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: () => {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: 4,\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 8,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: () => {\n        handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: () => {\n        handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, quiz.map((songName, index) => {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      style: trope === index ? {\n        color: 'black',\n        dir: 'rtl'\n      } : {\n        color: 'yellow',\n        dir: 'rtl'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }\n    }, songName.heb);\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js"],"names":["React","useState","useEffect","Button","PauseCircleFilled","PlayCircleFilled","CachedIcon","Slider","getRandomInt","min","max","Math","ceil","floor","random","createQuiz","items","num","i","songList","length","push","Quiz","flashcards","audio","Audio","jo","flag","setFlag","trope","setTrope","myflag","playNext","quiz","preload","src","sound","playbackRate","play","addEventListener","pause","reloadQuiz","value","setValue","handleChange","event","newValue","printc","calledBy","console","log","handlePlay","handlePause","map","songName","index","color","dir","heb"],"mappings":"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","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState, useEffect } from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(0, items.length)]);\n    }\n    return songList;\n  }\n\n  \nexport default function Quiz( { flashcards } ) {\n\n    var audio = new Audio();\n    const jo = 0;\n\n    const [flag, setFlag] = useState(1);\n    const [trope, setTrope] = useState(0);\n\n    let i = -1;\n    let myflag = 0;\n\n    function playNext (){\n        // if (!myflag) printc(\"JACKSA\");\n        // var i = trope;\n        ++i;\n        if (i < quiz.length){\n            audio.preload = \"auto\";\n            // audio.volume = 0.3;\n            audio.src = quiz[i].sound;\n            audio.playbackRate = 2;\n            audio.play();\n        }\n        else{ \n            setFlag(1);\n            i = -1;\n        }\n        setTrope(i);\n\n\n    }\n    audio.addEventListener('ended', function () {\n        if (!myflag) playNext();\n        else {\n            audio.pause();\n        }\n    }, false);\n\n    let items = flashcards;\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, 4));\n    const [value, setValue] = React.useState(10);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    function printc(calledBy){\n        console.log(calledBy, \"i= \", i, \"myflag= \", myflag);\n        // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n    }\n\n    function handlePlay(){\n        myflag = 0;\n        setTrope(0);\n        // printc(\"handlePlay b4 PlayNext\");\n        playNext();\n        setFlag(0); \n\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        myflag = 1;\n        audio.pause();\n        // printc(\"handlePause after setFlag\");\n        setFlag(1);\n        i = 0;\n        setTrope(0);\n\n\n    }\n\n\n    return (\n         <quiz>\n            <h5> \n            <div className=\"controls\">\n            \n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));}}/>}>\n                </Button> \n                \n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={4}\n                            step={1} marks min={1} max={8} valueLabelDisplay=\"auto\" />\n                </Button>\n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {flag ?  <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => {handlePlay()}}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => {handlePause()}}/>}>\n                    </Button>\n                }\n            </div>\n\n            </h5>\n\n\n        <p>\n        {quiz.map((songName, index)=> {return ( \n           <i style={(trope === index) ? {color: 'black', dir: 'rtl'} : {color: 'yellow', dir: 'rtl'}}>{songName.heb}</i>)})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}