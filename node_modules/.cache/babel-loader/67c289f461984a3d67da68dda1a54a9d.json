{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/ALL DESK/trope/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\nimport useAudioPlayer from './useAudioPlayer';\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(0, items.length)]);\n  }\n\n  return songList;\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nexport default function Quiz({\n  flashcards\n}) {\n  var audio = new Audio(); // const { curTime, duration, flag, setFlag, setClickedTime } = useAudioPlayer(audio);\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        flag = _React$useState2[0],\n        setFlag = _React$useState2[1];\n\n  function makeSongList(songList) {\n    // audio.preload = \"auto\";\n    var i = 0; // audio.addEventListener('ended', function () {\n    //     console.log(\"hit end of audio \");\n    //     i++;\n    //     setTrope(i);\n    //     if ((i < songList.length) && (flag === false)){\n    //         console.log(\"i < songLen and NOT flag\" + i);\n    //         audio.src = songList[i].sound;\n    //         audio.playbackRate = 2;\n    //         // flag ? audio.play() : audio.pause();\n    //         if (flag === false) {\n    //             console.log(\"Yes I'm NOT flag! so adding next\");\n    //             audio.play();\n    //         }\n    //         else {\n    //             console.log(\"Yes AM flag! NOT playing next\");\n    //             audio.pause();\n    //         }\n    //     }\n    //     else if (i === songList.length) {\n    //         console.log(\"Finished! reseting highlighted and that flag now\");\n    //         setFlag(true);\n    //         setTrope(-1);\n    //     }\n    //     else if (flag == true){\n    //         console.log(\"I am currently flag so not playing new audio\");\n    //     }\n    //   }, true);\n\n    audio.volume = 0.3;\n    setTrope(0);\n    audio.src = songList[0].sound;\n    audio.playbackRate = 2; // flag ? audio.play() : audio.pause();\n\n    audio.play();\n  } // audio.addEventListener('pause', function () { \n  //     console.log(\"SOMEONE flag ME!\");\n  // }, true);\n  // const [filter, filtered] = setState(event.target.value)\n\n\n  let items = flashcards;\n\n  const _useState = useState(createQuiz(items, getRandomInt(2, 10))),\n        _useState2 = _slicedToArray(_useState, 2),\n        quiz = _useState2[0],\n        reloadQuiz = _useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        trope = _React$useState4[0],\n        setTrope = _React$useState4[1]; //pick a song\n  // const handleSong = (event, newTrope) => {\n  //     setTrope(newTrope);\n  // };\n\n\n  const _React$useState5 = React.useState(10),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        value = _React$useState6[0],\n        setValue = _React$useState6[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  };\n\n  function handlePlay() {\n    console.log(\"i'm in handlePlay and i'm turning Pause false. WERE GO GO GO\");\n    setFlag(false);\n    makeSongList(quiz);\n    console.log(\"hit play\");\n  }\n\n  function handlePause() {\n    console.log(\"i'm in handlePause and i'm pausing YOUUUUUUU\");\n    setFlag(true);\n    console.log(\"hit pause\");\n  } // useEffect(() => {\n  //     console.log(\"effect triggered\");\n  //     flag ? console.log(\"effect play is TRUE\") : console.log(\"effect play is FALSE\");\n  //     console.log(\"leaving effect trigger\");\n  //     // const audio = document.getElementById(\"audio\");\n  //     // flag ? audio.play() : audio.pause();\n  //     // flag ? console.log(\"effect hi\") : console.log(\"effect bye\");\n  // })\n  // var quiz = createQuiz(items, 4);\n  // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \" Practice\", /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: 4 // position=\"static\"\n    ,\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 8,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: () => {\n        reloadQuiz(createQuiz(items, value));\n        console.log(\"ReOrder\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: () => {\n        handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, flag ? 'play' : 'pause') : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: () => {\n        handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, flag ? 'play' : 'pause'))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, quiz.map((songName, index) => {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      style: trope === index ? {\n        color: 'black'\n      } : {\n        color: 'yellow'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 12\n      }\n    }, songName.heb);\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js"],"names":["React","useState","useEffect","Button","PauseCircleFilled","PlayCircleFilled","CachedIcon","Slider","useAudioPlayer","getRandomInt","min","max","Math","ceil","floor","random","createQuiz","items","num","i","songList","length","push","Quiz","flashcards","audio","Audio","flag","setFlag","makeSongList","volume","setTrope","src","sound","playbackRate","play","quiz","reloadQuiz","trope","value","setValue","handleChange","event","newValue","handlePlay","console","log","handlePause","map","songName","index","color","heb"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState, useEffect } from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\nimport useAudioPlayer from './useAudioPlayer';\n\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(0, items.length)]);\n    }\n    return songList;\n  }\n\n  \n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\n\n  \nexport default function Quiz( { flashcards } ) {\n\n    var audio = new Audio();\n    // const { curTime, duration, flag, setFlag, setClickedTime } = useAudioPlayer(audio);\n    const [flag, setFlag] = React.useState(false);\n\n    function makeSongList (songList) {\n\n        // audio.preload = \"auto\";\n        var i = 0;    \n\n        // audio.addEventListener('ended', function () {\n    \n        //     console.log(\"hit end of audio \");\n\n        //     i++;\n        //     setTrope(i);\n        //     if ((i < songList.length) && (flag === false)){\n        //         console.log(\"i < songLen and NOT flag\" + i);\n        //         audio.src = songList[i].sound;\n        //         audio.playbackRate = 2;\n        //         // flag ? audio.play() : audio.pause();\n        //         if (flag === false) {\n        //             console.log(\"Yes I'm NOT flag! so adding next\");\n        //             audio.play();\n        //         }\n        //         else {\n        //             console.log(\"Yes AM flag! NOT playing next\");\n        //             audio.pause();\n        //         }\n        //     }\n        //     else if (i === songList.length) {\n        //         console.log(\"Finished! reseting highlighted and that flag now\");\n        //         setFlag(true);\n        //         setTrope(-1);\n        //     }\n        //     else if (flag == true){\n        //         console.log(\"I am currently flag so not playing new audio\");\n        //     }\n\n        //   }, true);\n    \n        audio.volume = 0.3;\n        setTrope(0);\n        audio.src = songList[0].sound;\n        audio.playbackRate = 2;\n        // flag ? audio.play() : audio.pause();\n        audio.play();\n    }\n\n    // audio.addEventListener('pause', function () { \n    //     console.log(\"SOMEONE flag ME!\");\n    // }, true);\n\n    // const [filter, filtered] = setState(event.target.value)\n    let items = flashcards;\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n    const [trope, setTrope] = React.useState(0);\n\n    //pick a song\n    // const handleSong = (event, newTrope) => {\n    //     setTrope(newTrope);\n    // };\n\n    const [value, setValue] = React.useState(10);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    function handlePlay(){\n        console.log(\"i'm in handlePlay and i'm turning Pause false. WERE GO GO GO\");\n        setFlag(false); \n        makeSongList(quiz);\n        console.log(\"hit play\");\n    }\n\n    function handlePause(){\n        console.log(\"i'm in handlePause and i'm pausing YOUUUUUUU\");\n        setFlag(true); \n        console.log(\"hit pause\");\n    }\n    // useEffect(() => {\n    //     console.log(\"effect triggered\");\n    //     flag ? console.log(\"effect play is TRUE\") : console.log(\"effect play is FALSE\");\n    //     console.log(\"leaving effect trigger\");\n    //     // const audio = document.getElementById(\"audio\");\n    //     // flag ? audio.play() : audio.pause();\n    //     // flag ? console.log(\"effect hi\") : console.log(\"effect bye\");\n\n    // })\n\n\n\n  \n\n    // var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n         <quiz>\n            <h5> Practice\n           {/* {pause === true ? 'flag' : 'flag'} */}\n\n           <Button size=\"small\" variant=\"contained\"> \n           <Slider value={value} onChange={handleChange} defaultValue={4}\n                // position=\"static\"\n                step={1} marks min={1} max={8} valueLabelDisplay=\"auto\" />\n           \n            </Button>\n        \n\n            <div className=\"controls\">\n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));  console.log(\"ReOrder\");}}/>}>\n                    {/* endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value)); setFlag(true); console.log(\"hit play\");}}/>}> */}\n                </Button> \n                \n                {flag ?  \n                    \n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PlayCircleFilled onClick={() => {handlePlay()}}/>}>\n                        {flag ? 'play' : 'pause'}\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => {handlePause()}}/>}>\n                        {flag ? 'play' : 'pause'}\n                    </Button>\n                }\n\n                {/* <Bar curTime={curTime} duration={duration} onTimeUpdate={(time) => setClickedTime(time)}/> */}\n            </div>\n           {/* <Button variant=\"contained\" color=\"primary\"\n                endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value)); setFlag(true);}}/>}>\n            </Button> */}\n\n\n            {/* <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PlayCircleFilled onClick={() => {makeSongList(audio, quiz);  setFlag(false);}}/>}>\n            </Button> */}\n{/*             \n            <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PauseCircleFilled onClick={() => { setFlag(true);}}/>}>\n            </Button> */}\n\n            </h5>\n\n\n        <p>\n        {quiz.map((songName, index)=> {return ( \n           <i style={(trope === index) ? {color: 'black'} : {color: 'yellow'}}>{songName.heb}</i>)})}\n        </p>\n\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}