{"ast":null,"code":"var _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState } from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  grid: {\n    width: 500,\n    height: 450,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }\n})); // const playSound = audioFile => {\n//   audioFile.play();\n// };\n// const song =  new Audio(flashcard.sound)\n\nfunction playMe(song) {\n  // return new Audio(song);\n  new Audio(song).play();\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(items.length)]);\n  }\n\n  return songList;\n}\n\nfunction makeSongList(songList) {\n  var audio = new Audio();\n  var i = 0;\n  audio.addEventListener('ended', function () {\n    // i = ++i < songList.length ? i : 0;\n    i++;\n\n    if (i < songList.length) {\n      console.log(i);\n      audio.src = songList[i].sound;\n      audio.play();\n    }\n  }, true);\n  audio.volume = 0.3; // audio.loop = false;\n\n  audio.src = songList[0].sound;\n  audio.play();\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nexport default function FlashcardList({\n  flashcards\n}) {\n  // const [filter, filtered] = setState(event.target.value)\n  // const [quiz, reloadQuiz] = useState(false);\n  const classes = useStyles();\n  var x;\n  let items = flashcards;\n  var quiz = createQuiz(items, 4); // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleOutlineIcon, {\n      onClick: () => {\n        makeSongList(quiz);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), quiz.map(songName => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", songName.heb, \" \");\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, items.map(flashcard => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flashcard, {\n      flashcard: flashcard,\n      key: flashcard.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \" \"));\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js"],"names":["React","useState","Flashcard","makeStyles","Grid","PlayArrowIcon","Button","PlayCircleOutlineIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","playMe","song","Audio","play","getRandomInt","max","Math","floor","random","createQuiz","items","num","i","songList","length","push","makeSongList","audio","addEventListener","console","log","src","sound","volume","FlashcardList","flashcards","classes","x","quiz","map","songName","heb","flashcard","id"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState} from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n    },\n  }));\n\n  // const playSound = audioFile => {\n  //   audioFile.play();\n  // };\n  // const song =  new Audio(flashcard.sound)\n\n  function playMe(song) {\n    // return new Audio(song);\n    new Audio(song).play();\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(items.length)]);\n    }\n    return songList;\n  }\n\n  function makeSongList(songList) {\n\n    var audio = new Audio();\n    var i = 0;\n\n    audio.addEventListener('ended', function () {\n\n      // i = ++i < songList.length ? i : 0;\n      i++;\n      if (i < songList.length){\n        console.log(i)\n        audio.src = songList[i].sound;\n        audio.play();}\n      }, true);\n\n    audio.volume = 0.3;\n    // audio.loop = false;\n    audio.src = songList[0].sound;\n    audio.play();\n  }\n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \n\n  \nexport default function FlashcardList( { flashcards } ) {\n\n    // const [filter, filtered] = setState(event.target.value)\n    // const [quiz, reloadQuiz] = useState(false);\n\n    const classes = useStyles();\n    var x;\n    let items = flashcards;\n\n    var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n\n        \n    <div>\n         <div className={classes.root}>\n           <p>\n\n           {/* <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={\n                    <PlayCircleOutlineIcon onClick={() => {reloadQuiz(quiz = createQuiz(items, 4))}}>\n                    </PlayCircleOutlineIcon>\n                }>\n                Reload \n            </Button> */}\n\n            <Button\n                endIcon={\n                    <PlayCircleOutlineIcon onClick={() => {makeSongList(quiz)}}>\n                    </PlayCircleOutlineIcon>\n                }>\n            </Button>\n\n           {quiz.map( songName => {return (<> {songName.heb} </>)})}\n            {/* {makeSongList(quiz)} */}\n           </p>\n        {/* <input type=\"text\" onChange={this.filtered.bind(this)}/> */}\n\n      <Grid container spacing={3}> \n      {items.map(flashcard => {\n                  return (\n                  <Grid item xs={3} >\n                    <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard>\n                  </Grid>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}