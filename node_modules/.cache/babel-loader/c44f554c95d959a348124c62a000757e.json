{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/ALL DESK/trope/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState } from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  grid: {\n    width: 500,\n    height: 450,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(0, items.length)]);\n  }\n\n  return songList;\n}\n\nfunction makeSongList(songList) {\n  var audio = new Audio();\n  audio.preload = \"auto\";\n  audio.controls = true;\n  var i = 0;\n  audio.addEventListener('ended', function () {\n    // i = ++i < songList.length ? i : 0;\n    i++;\n\n    if (i < songList.length) {\n      audio.src = songList[i].sound;\n      console.log(audio.duration);\n      audio.playbackRate = 2;\n      audio.play();\n    }\n  }, true);\n  audio.volume = 0.3; // audio.loop = false;\n\n  audio.src = songList[0].sound;\n  audio.playbackRate = 2;\n  audio.play();\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nfunction valuetext(value) {\n  return \"\".concat(value);\n}\n\nexport default function Quiz({\n  flashcards\n}) {\n  // const [filter, filtered] = setState(event.target.value)\n  let items = flashcards; // const [val, setNumQuizItems] = useState(3);\n\n  const _useState = useState(createQuiz(items, getRandomInt(2, 10))),\n        _useState2 = _slicedToArray(_useState, 2),\n        quiz = _useState2[0],\n        reloadQuiz = _useState2[1]; // const [activeStep, setActiveStep] = React.useState(0);\n\n\n  const _React$useState = React.useState(10),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // const handleNext = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  // };\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n  // const classes = useStyles();\n\n\n  var x; // var quiz = createQuiz(items, 4);\n  // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: 4 // position=\"static\"\n    ,\n    step: 1,\n    marks: true,\n    min: 2,\n    max: 8,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: () => {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleOutlineIcon, {\n      onClick: () => {\n        makeSongList(quiz);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })), quiz.map(songName => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", songName.heb, \" \");\n  }));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js"],"names":["React","useState","Flashcard","makeStyles","PlayArrowIcon","Button","PlayCircleOutlineIcon","CachedIcon","MobileStepper","KeyboardArrowLeft","KeyboardArrowRight","Slider","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","getRandomInt","min","max","Math","ceil","floor","random","createQuiz","items","num","i","songList","length","push","makeSongList","audio","Audio","preload","controls","addEventListener","src","sound","console","log","duration","playbackRate","play","volume","valuetext","value","Quiz","flashcards","quiz","reloadQuiz","setValue","handleChange","event","newValue","x","map","songName","heb"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState} from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Slider from '@material-ui/core/Slider';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n    },\n  }));\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(0, items.length)]);\n    }\n    return songList;\n  }\n\n  function makeSongList(songList) {\n\n    var audio = new Audio();\n    audio.preload = \"auto\";\n    audio.controls = true;\n    var i = 0;\n\n    audio.addEventListener('ended', function () {\n\n      // i = ++i < songList.length ? i : 0;\n      i++;\n      if (i < songList.length){\n        audio.src = songList[i].sound;\n        console.log(audio.duration)\n  \n        \n        audio.playbackRate = 2;\n        audio.play();}\n      }, true);\n\n    audio.volume = 0.3;\n    // audio.loop = false;\n    audio.src = songList[0].sound;\n    audio.playbackRate = 2;\n    audio.play();\n  }\n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \nfunction valuetext(value) {\n    return `${value}`;\n  }\n\n  \nexport default function Quiz( { flashcards } ) {\n\n    // const [filter, filtered] = setState(event.target.value)\n    let items = flashcards;\n\n    // const [val, setNumQuizItems] = useState(3);\n    const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n\n    // const [activeStep, setActiveStep] = React.useState(0);\n\n    const [value, setValue] = React.useState(10);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // const handleNext = () => {\n    //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    // };\n  \n    // const handleBack = () => {\n    //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    // };\n\n    // const classes = useStyles();\n    var x;\n    // var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n         <quiz>\n\n           <p>\n           {/* <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" /> */}\n\n           <Button size=\"small\" variant=\"contained\"> \n\n           <Slider\n                value={value} \n                onChange={handleChange}\n                defaultValue={4}\n                // position=\"static\"\n                step={1}\n                marks\n                min={2}\n                max={8}\n                valueLabelDisplay=\"auto\"\n             />\n           \n            </Button>\n          \n            \n\n           <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={\n                    <CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value))}}>\n                    </CachedIcon>\n                }>\n                \n            </Button>\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={\n                    <PlayCircleOutlineIcon onClick={() => {makeSongList(quiz)}}>\n                    </PlayCircleOutlineIcon>\n                }>\n            </Button>\n\n            </p>\n\n           {quiz.map( songName => {return (<> {songName.heb} </>)})}\n            {/* {makeSongList(quiz)} */}\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}