{"ast":null,"code":"var _jsxFileName = \"/Users/femac2/Desktop/trope/src/FlashcardList.js\";\nimport React, { setState, event } from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport Paper from '@material-ui/core/Paper'; // const useStyles = makeStyles((theme) => ({\n//     root: {\n//       display: 'flex',\n//       flexWrap: 'wrap',\n//       justifyContent: 'space-around',\n//       overflow: 'hidden',\n//       backgroundColor: theme.palette.background.paper,\n//     },\n//     grid: {\n//       width: 500,\n//       height: 450,\n//       direction=\"row\",\n//       justify=\"center\",\n//       alignItems=\"center\"\n//       // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n//     //   transform: 'translateZ(0)',\n//     },\n//     titleBar: {\n//       background:\n//         'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n//         'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n//     },\n//     icon: {\n//       color: 'white',\n//     },\n//   }));\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\nexport default function FlashcardList({\n  flashcards\n}) {\n  // const [filter, filtered] = setState(event.target.value)\n  // const classes = useStyles();\n  let items = flashcards; // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"xs=3\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, items.map(flashcard => {\n    return 'hello'; // return <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard>\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, items.map(flashcard => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }\n    }, \" \", flashcard.heb, \" \");\n  })))) // </div>\n  ;\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/trope/src/FlashcardList.js"],"names":["React","setState","event","Flashcard","makeStyles","Grid","GridList","Paper","FlashcardList","flashcards","items","classes","paper","map","flashcard","heb"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,KAAzB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIA,eAAe,SAASC,aAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAyC;AAEpD;AAEA;AAEA,MAAIC,KAAK,GAAGD,UAAZ,CANoD,CAOpD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAGA,sBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,IAAD;AACA,IAAA,SAAS,MADT;AAEA,IAAA,SAAS,EAAC,KAFV;AAGA,IAAA,OAAO,EAAC,QAHR;AAIA,IAAA,UAAU,EAAC,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOF,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEE,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAPE,eAaA;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,KAAK,CAACG,GAAN,CAAUC,SAAS,IAAI;AAClB,WAAO,OAAP,CADkB,CAEpB;AACH,GAHA,CADD,CADJ,CAbA,eAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,KAAK,CAACG,GAAN,CAAUC,SAAS,IAAI;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOA,SAAS,CAACC,GAAjB,MAAP;AACH,GAFJ,CADD,CAtBA,CAPJ,CAHA,CA0CA;AA1CA;AA8CH","sourcesContent":["import React, {setState, event} from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport Paper from '@material-ui/core/Paper';\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//       display: 'flex',\n//       flexWrap: 'wrap',\n//       justifyContent: 'space-around',\n//       overflow: 'hidden',\n//       backgroundColor: theme.palette.background.paper,\n//     },\n//     grid: {\n//       width: 500,\n//       height: 450,\n//       direction=\"row\",\n//       justify=\"center\",\n//       alignItems=\"center\"\n\n//       // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n//     //   transform: 'translateZ(0)',\n//     },\n//     titleBar: {\n//       background:\n//         'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n//         'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n//     },\n//     icon: {\n//       color: 'white',\n//     },\n//   }));\n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \n\n  \nexport default function FlashcardList( { flashcards } ) {\n\n    // const [filter, filtered] = setState(event.target.value)\n\n    // const classes = useStyles();\n\n    let items = flashcards;\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n\n        \n    <div>\n         {/* <div className={classes.root}> */}\n\n        {/* <input type=\"text\" onChange={this.filtered.bind(this)}/> */}\n\n        {/* <GridList cellHeight={100} spacing={4} columns={3} className={classes.gridList}> */}\n       \n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n\n        <div className = \"card-grid\">\n            <Grid item xs>\n            {items.map(flashcard => {\n                  return 'hello'\n                // return <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard>\n            })}\n            </Grid>\n\n        </div>\n        <div>\n        {items.map(flashcard => {\n                return <div> {flashcard.heb} </div>\n            })}\n        </div>\n       </Grid>\n       {/* </GridList> */}\n\n\n    </div>\n    // </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}