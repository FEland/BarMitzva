{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/ALL DESK/trope/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js\";\n// import React, {setState, event} from 'react'\nimport React, { useState } from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Slider from '@material-ui/core/Slider';\nimport { render } from 'react-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  grid: {\n    width: 500,\n    height: 450,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(0, items.length)]);\n  }\n\n  return songList;\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nfunction valuetext(value) {\n  return \"\".concat(value);\n}\n\nexport default function Quiz({\n  flashcards\n}) {\n  function makeSongList(songList) {\n    var audio = new Audio();\n    audio.preload = \"auto\";\n    audio.controls = true;\n    var i = 0;\n    audio.addEventListener('ended', function () {\n      // i = ++i < songList.length ? i : 0;\n      i++;\n      setTrope(i);\n\n      if (i < songList.length) {\n        audio.src = songList[i].sound;\n        audio.playbackRate = 2;\n\n        if (pause === false) {\n          audio.play();\n        }\n      } else {\n        audio.pause();\n      }\n    }, true);\n\n    if (pause === false) {\n      audio.volume = 0.3; // audio.loop = false;\n\n      setTrope(0);\n      audio.src = songList[0].sound;\n      audio.playbackRate = 2;\n      audio.play();\n    }\n  } // const [filter, filtered] = setState(event.target.value)\n\n\n  let items = flashcards;\n\n  const _useState = useState(createQuiz(items, getRandomInt(2, 10))),\n        _useState2 = _slicedToArray(_useState, 2),\n        quiz = _useState2[0],\n        reloadQuiz = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pause = _useState4[0],\n        setPause = _useState4[1]; //pick a song\n\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        trope = _React$useState2[0],\n        setTrope = _React$useState2[1];\n\n  const handleSong = (event, newTrope) => {\n    setTrope(newTrope);\n  };\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  };\n\n  var x; // var quiz = createQuiz(items, 4);\n  // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // reloadQuiz = (e) => {\n  //   this.setState({quiz: createQuiz(items, 4)})\n  // }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }\n  }, pause === true ? 'paused' : 'playing', /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: 4 // position=\"static\"\n    ,\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 8,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: () => {\n        reloadQuiz(createQuiz(items, value));\n        setPause(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleOutlineIcon, {\n      onClick: () => {\n        makeSongList(quiz);\n        setPause(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleOutlineIcon, {\n      onClick: () => {\n        setPause(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, quiz.map((songName, index) => {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      style: trope === index ? {\n        color: 'black'\n      } : {\n        color: 'yellow'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 12\n      }\n    }, songName.heb);\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/Quiz.js"],"names":["React","useState","Flashcard","makeStyles","PlayArrowIcon","Button","PlayCircleOutlineIcon","PauseCircleOutlineIcon","CachedIcon","MobileStepper","KeyboardArrowLeft","KeyboardArrowRight","Slider","render","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","getRandomInt","min","max","Math","ceil","floor","random","createQuiz","items","num","i","songList","length","push","valuetext","value","Quiz","flashcards","makeSongList","audio","Audio","preload","controls","addEventListener","setTrope","src","sound","playbackRate","pause","play","volume","quiz","reloadQuiz","setPause","trope","handleSong","event","newTrope","setValue","handleChange","newValue","x","map","songName","index","color","heb"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React, {useState} from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Button from \"@material-ui/core/Button\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Slider from '@material-ui/core/Slider';\nimport { render } from 'react-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n    },\n  }));\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(0, items.length)]);\n    }\n    return songList;\n  }\n\n  \n\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \nfunction valuetext(value) {\n    return `${value}`;\n  }\n\n  \nexport default function Quiz( { flashcards } ) {\n\n    function makeSongList(songList) {\n\n        var audio = new Audio();\n        audio.preload = \"auto\";\n        audio.controls = true;\n        var i = 0;\n    \n        audio.addEventListener('ended', function () {\n    \n          // i = ++i < songList.length ? i : 0;\n          \n            i++;\n            setTrope(i);\n            if ((i < songList.length)){\n                    audio.src = songList[i].sound;      \n                    audio.playbackRate = 2;\n                if (pause === false) {\n                    audio.play();}\n                }\n                else {\n                    audio.pause();\n                }\n          }, true);\n    \n        if (pause === false) {\n            audio.volume = 0.3;\n            // audio.loop = false;\n            setTrope(0);\n            audio.src = songList[0].sound;\n            audio.playbackRate = 2;\n            audio.play();\n      }\n    }\n    // const [filter, filtered] = setState(event.target.value)\n    let items = flashcards;\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, getRandomInt(2, 10)));\n\n    const [pause, setPause] = useState(false)\n\n    //pick a song\n    const [trope, setTrope] = React.useState(0);\n    const handleSong = (event, newTrope) => {\n        setTrope(newTrope);\n    };\n\n    const [value, setValue] = React.useState(10);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    var x;\n\n    // var quiz = createQuiz(items, 4);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n      // reloadQuiz = (e) => {\n      //   this.setState({quiz: createQuiz(items, 4)})\n      // }\n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n         <quiz>\n\n           <p>\n           {pause === true ? 'paused' : 'playing'}\n\n           <Button size=\"small\" variant=\"contained\"> \n           <Slider value={value} onChange={handleChange} defaultValue={4}\n                // position=\"static\"\n                step={1} marks min={1} max={8} valueLabelDisplay=\"auto\" />\n           \n            </Button>\n        \n           <Button variant=\"contained\" color=\"primary\"\n                endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value)); setPause(true);}}/>}>\n            </Button>\n\n\n            <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PlayCircleOutlineIcon onClick={() => {makeSongList(quiz); setPause(false);}}/>}>\n            </Button>\n            \n            <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PauseCircleOutlineIcon onClick={() => {setPause(true)}}/>}>\n            </Button>\n\n\n            </p>\n\n\n        <p>\n        {quiz.map((songName, index)=> {return ( \n           <i style={(trope === index) ? {color: 'black'} : {color: 'yellow'}}>{songName.heb}</i>)})}\n        </p>\n\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}