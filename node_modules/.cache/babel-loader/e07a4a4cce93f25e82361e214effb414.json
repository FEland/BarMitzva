{"ast":null,"code":"var _jsxFileName = \"/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js\";\n// import React, {setState, event} from 'react'\nimport React from 'react';\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  grid: {\n    width: 500,\n    height: 450,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }\n})); // const playSound = audioFile => {\n//   audioFile.play();\n// };\n// const song =  new Audio(flashcard.sound)\n\nfunction playMe(song) {\n  // return new Audio(song);\n  new Audio(song).play();\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction createQuiz(items, num) {\n  var i;\n  var songList = [];\n\n  if (num > items.length) {\n    return;\n  }\n\n  for (i = 0; i < num; i++) {\n    songList.push(items[getRandomInt(items.length)]);\n  }\n\n  return songList;\n} //   audio.addEventListener('ended', function () {\n//     i = ++i < songList.length ? i : 0;\n//     console.log(i)\n//     audio.src = songList[i];\n//     audio.play();\n//   }, true);\n// audio.loop = false;\n// audio.src = playlist[0];\n// audio.play();\n// }\n\n\nfunction makeSongList(songList) {\n  var audio = new Audio();\n  var i;\n\n  for (i = 0; i < songList.length; i++) {\n    audio.src.push(songList[i].sound);\n    audio.play();\n  } // audio.addEventListener('ended', function () {\n  //   i = ++i < songList.length ? i : 0;\n  //   console.log(i)\n  //   audio.src = songList[i].sound;\n  //   audio.play(); }, true);\n  // audio.volume = 0.3;\n  // audio.loop = false;\n  // audio.src = songList[0].sound;\n  // audio.play();\n  // audio.ended();\n  // audio.pause();\n\n} //   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n\n\nexport default function FlashcardList({\n  flashcards\n}) {\n  // const [filter, filtered] = setState(event.target.value)\n  const classes = useStyles();\n  var x;\n  let items = flashcards;\n  let quiz = createQuiz(items, 3); // if (filter){\n  //     items = items.filter( item =>\n  //         item.id.toLowerCase()\n  //         .includes.this.state.filter.toLowerCase)\n  // }\n  // editSearchTerm = (e) => {\n  //     this.setState({searchTerm: e.target.value})\n  //   }\n  // dynamicSearch = () => {\n  //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }\n  }, quiz.map(songName => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \" \", songName.heb);\n  }), makeSongList(quiz)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, items.map(flashcard => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flashcard, {\n      flashcard: flashcard,\n      key: flashcard.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \" \"));\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/ALL DESK/trope/src/FlashcardList.js"],"names":["React","Flashcard","makeStyles","Grid","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","playMe","song","Audio","play","getRandomInt","max","Math","floor","random","createQuiz","items","num","i","songList","length","push","makeSongList","audio","src","sound","FlashcardList","flashcards","classes","x","quiz","map","songName","heb","flashcard","id"],"mappings":"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","sourcesContent":["// import React, {setState, event} from 'react'\n\nimport React from 'react'\nimport Flashcard from \"./Flashcard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n    },\n  }));\n\n  // const playSound = audioFile => {\n  //   audioFile.play();\n  // };\n  // const song =  new Audio(flashcard.sound)\n\n  function playMe(song) {\n    // return new Audio(song);\n    new Audio(song).play();\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  function createQuiz(items, num) {\n    var i; var songList = [];\n    if (num > items.length) {\n      return;\n    }\n    for (i = 0; i < num; i++){\n      songList.push(items[getRandomInt(items.length)]);\n    }\n    return songList;\n  }\n\n//   audio.addEventListener('ended', function () {\n//     i = ++i < songList.length ? i : 0;\n//     console.log(i)\n//     audio.src = songList[i];\n//     audio.play();\n//   }, true);\n// audio.loop = false;\n// audio.src = playlist[0];\n// audio.play();\n// }\n\nfunction makeSongList(songList) {\n\n  var audio = new Audio();\n  var i;\n  for (i = 0; i < songList.length; i++){\n    audio.src.push(songList[i].sound);\n    audio.play();\n  }\n  // audio.addEventListener('ended', function () {\n  //   i = ++i < songList.length ? i : 0;\n  //   console.log(i)\n  //   audio.src = songList[i].sound;\n  //   audio.play(); }, true);\n\n  // audio.volume = 0.3;\n  // audio.loop = false;\n  // audio.src = songList[0].sound;\n  // audio.play();\n  // audio.ended();\n  // audio.pause();\n}\n//   filter(e){\n//     this.setState({filter: e.target.value});\n// }\n  \n\n  \nexport default function FlashcardList( { flashcards } ) {\n\n    // const [filter, filtered] = setState(event.target.value)\n\n    const classes = useStyles();\n    var x;\n    let items = flashcards;\n    let quiz = createQuiz(items, 3);\n    // if (filter){\n    //     items = items.filter( item =>\n    //         item.id.toLowerCase()\n    //         .includes.this.state.filter.toLowerCase)\n    // }\n\n    // editSearchTerm = (e) => {\n    //     this.setState({searchTerm: e.target.value})\n    //   }\n    \n    // dynamicSearch = () => {\n    //     return flashcards.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    //   }\n    \n\n    return (\n\n        \n    <div>\n         <div className={classes.root}>\n           <p>\n           {/* {x = getRandomInt(items.length)} */}\n           {/* {items[x].heb}\n           {playMe(items[x].sound)} */}\n           {quiz.map( songName => {\n                  return (\n                    <p> {songName.heb} \n                    {/* {playMe(songName.sound)} */}\n                    </p>\n                  )\n            })}\n            {makeSongList(quiz)}\n\n           </p>\n        {/* <input type=\"text\" onChange={this.filtered.bind(this)}/> */}\n\n      <Grid container spacing={3}> \n      {items.map(flashcard => {\n                  return (\n                  <Grid item xs={3} >\n                    <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard>\n                  </Grid>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}